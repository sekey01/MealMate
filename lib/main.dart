import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:mealmate/AdminPanel/OtherDetails/AdminFunctionsProvider.dart';
import 'package:mealmate/AdminPanel/OtherDetails/ID.dart';
import 'package:mealmate/AdminPanel/OtherDetails/incomingOrderProvider.dart';
import 'package:mealmate/Local_Storage/Locall_Storage_Provider/StoreCredentials.dart';
import 'package:mealmate/UserLocation/LocationProvider.dart';
import 'package:mealmate/firebase_options.dart';
import 'package:mealmate/models&ReadCollectionModel/sendOrderFunctionProvider.dart';
import 'package:mealmate/pages/init_pages/splashscreen.dart';
import 'package:mealmate/searchFoodItemProvider/searchFoodItemFunctionProvider.dart';
import 'package:mealmate/theme/themedata.dart';
import 'package:provider/provider.dart';

import 'AdminPanel/collectionUploadModelProvider/collectionProvider.dart';
import 'models&ReadCollectionModel/cartmodel.dart';
import 'models&ReadCollectionModel/userReadwithCollection.dart';

void main() async {
  /// print(Geolocator.getLocationAccuracy().toString());
  WidgetsFlutterBinding.ensureInitialized();

  await Firebase.initializeApp(
    /// This is the default options for Firebase TO CHOSE THE PLATFORM TO INITTIALIZE , THUS WHETHER WEB / ANDROID / IOS
    /// You can change the options in the file firebase_options.dart WHICH IS IN THE ROOT DIRECTORY THAT GENERATED BY THE CLI
    /// WHEN YOU RUN THE COMMAND `flutterfire configure`
    options: DefaultFirebaseOptions.currentPlatform,
  );
  FirebaseFirestore.instance.settings = Settings(persistenceEnabled: true);
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return ScreenUtilInit(
      child: MultiProvider(
        providers: [
          ChangeNotifierProvider(create: (context) => CartModel()),
          ChangeNotifierProvider(create: (context) => AdminCollectionProvider()),
          ChangeNotifierProvider(create: (context) => userCollectionProvider()),
          ChangeNotifierProvider(create: (context) => AdminId()),
          ChangeNotifierProvider(create: (context) => AdminFunctions()),
          ChangeNotifierProvider(create: (context) => SearchProvider()),
          ChangeNotifierProvider(create: (context) => LocationProvider()),
          ChangeNotifierProvider(create: (context) => SendOrderProvider()),
          ChangeNotifierProvider(create: (context) => LocalStorageProvider()),
          ChangeNotifierProvider(create: (context)=> IncomingOrdersProvider())
        ],
        child: MaterialApp(
            debugShowCheckedModeBanner: false,
            theme: AppTheme.lightTheme,
            darkTheme: AppTheme.darkTheme,
            home: Scaffold(
              body: SplashScreen(),
            )),
      ),
      designSize: const Size(360, 690),
      minTextAdapt: true,
      splitScreenMode: true,

    );
  }
}

/*
/// I USED THE CLASS BELLOW TO VERIFFY IF FIREBASE IS WORKING

class MyHomePage extends StatelessWidget {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  MyHomePage({super.key});

  Future<void> _addTestDocument() async {
    await _firestore.collection('test').add({'field': 'value'});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.green,
      appBar: AppBar(
        title: Text('Firebase Check'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Center(
          child: ElevatedButton(
            onPressed: _addTestDocument,
            child: Text('Add Test Document'),
          ),
        ),
      ),
    );
  }
}*/
